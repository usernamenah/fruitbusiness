 {/* {showDiv && (
                    <div className="phonecheck">

                        <PhoneInput
                            country={'in'}
                            value={phone}
                            onChange={(phone)=>setPhone("+"+phone) }
                        />

                        <button onClick={sendOtp} >send otp</button>
                        <div id="recaptcha"></div>
                        <input placeholder="enter otp" onChange={(e)=>{seOtp(e.target.value)}}></input>
                        <button  onClick={verifyOtp}>verify</button>
                        ðŸŽ‰ This div appeared after 5 seconds!
                    </div>
                )}
            </div> */}


















    // const handleboxappear = async () => {
    //     try {
    //         const response = await fetch("http://localhost:5000/throughreq/chrephno", {
    //             method: 'GET',
    //             credentials: 'include' // Important to include cookies
    //         });

    //         if (response.ok) {
    //             const data = await response.json();

    //             if (data.authorized) {
    //                 setShowDiv(false);
    //             } else {
    //                 alert("Not authorized");
    //                 setShowDiv(true);
    //             }
    //         } else {
    //             console.error("Server returned an error");
    //             setShowDiv(false);
    //         }
    //     } catch (error) {
    //         console.error("Error checking auth:", error);
    //         setShowDiv(false);
    //     }
    // };




























    // const [showDiv, setShowDiv] = useState(false);
    // const [phone , setPhone] = useState("");
    // const [user,setUser] = useState(null);
    // const [otp,seOtp]= useState("");

    // const sendOtp=async()=>{
    //     try{
    //         const recaptcha = new RecaptchaVerifier(auth,"recaptcha",{ size: 'normal', // or 'compact', 'invisible'
    //             theme: 'light', // or 'dark'
    //             'expired-callback': () => {
    //               console.log('reCAPTCHA expired, resetting...');
    //               recaptcha.reset();
    //             }
    //           });
    //         const confirmation = await signInWithPhoneNumber(auth , phone, recaptcha);
    //         setUser(confirmation);

    //     }
    //     catch(error){
    //         console.log(error);
    //     }

    // }
    // const verifyOtp = async () => {
    //     try {
    //         if (user) {
    //             await user.confirm(otp);
    //         } else {
    //             alert("Please send OTP first");
    //         }
    //     } catch(error) {
    //         console.log(error);
    //     }
    // }
    // useEffect(() => {
    //     const timer = setTimeout(() => {
    //         alert("incomingload");
    //         handleboxappear();
    //     }, 5000); // 5 seconds

    //     return () => clearTimeout(timer); // Cleanup on unmount
    // }, []);





            